<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="/main/css/admin.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <title>Panel Administrador - Gesti√≥n de Usuarios</title>
  <style>
    .usuario-deshabilitado {
      opacity: 0.5;
      text-decoration: line-through;
    }
  </style>
</head>
<body>
  <div class="admin-container">
    <div class="user-header">
      <div>
        <h1>Panel Administrador</h1>
        <p>Gesti√≥n de usuarios del sistema</p>
      </div>
      <div class="user-info">
        <div class="user-icon">A</div>
        <div>
          <div class="username">Administrador</div>
          <div class="user-role">Rol: UAI</div>
        </div>
      </div>
    </div>

    <section id="listaUsuarios">
      <h2>Usuarios registrados</h2>
      <div class="table-container">
        <table class="usuarios-table">
          <thead>
            <tr>
              <th>ID</th>
              <th>Nombre</th>
              <th>Email</th>
              <th>Rol</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody id="usuariosTableBody"></tbody>
        </table>
      </div>
    </section>

    <section id="crearUsuario" class="form-section">
      <h2>Crear nuevo usuario</h2>
      <form id="formCrearUsuario">
        <div class="input-group">
          <label for="nombre">Nombre completo:</label>
          <input type="text" id="nombre" required />
        </div>
        <div class="input-group">
          <label for="userName">Nombre de usuario:</label>
          <input type="text" id="userName" required />
        </div>
        <div class="input-group">
          <label for="email">Email:</label>
          <input type="email" id="email" required />
        </div>
        <div class="input-group">
          <label for="password">Contrase√±a:</label>
          <input type="password" id="password" required minlength="8" />
        </div>
        <div class="input-group">
          <label for="rol">Rol:</label>
          <select id="rol" required>
            <option value="">Selecciona un rol</option>
            <option value="UAI">Administrador (UAI)</option>
            <option value="UReg">Registro (UReg)</option>
            <option value="UTI">Test Inicial (UTI)</option>
            <option value="UC">Calidad (UC)</option>
            <option value="ULL">Liberaci√≥n y Limpieza (ULL)</option>
            <option value="UR">Re-Test (UR)</option>
            <option value="UE">Empaque (UE)</option>
          </select>
        </div>
        <button type="submit" class="btn btn-primary btn-submit">
          <span class="btn-icon">+</span> Crear usuario
        </button>
      </form>
    </section>
  </div>

  <!-- Modal editar -->
  <div id="modalEditar" style="display: none;">
    <div class="modal-content">
      <div class="modal-header">
        <h3>Editar usuario</h3>
      </div>
      <form id="formEditarUsuario">
        <input type="hidden" id="editarId" />
        <div class="input-group">
          <label for="editarNombre">Nombre:</label>
          <input type="text" id="editarNombre" required />
        </div>
        <div class="input-group">
          <label for="editarEmail">Email:</label>
          <input type="email" id="editarEmail" required />
        </div>
        <div class="input-group">
          <label for="editarRol">Rol:</label>
          <select id="editarRol" required>
            <option value="">Selecciona rol</option>
            <option value="UAI">Administrador (UAI)</option>
            <option value="UReg">Registro (UReg)</option>
            <option value="UTI">Test Inicial (UTI)</option>
            <option value="UC">Calidad (UC)</option>
            <option value="ULL">Liberaci√≥n y Limpieza (ULL)</option>
            <option value="UR">Re-Test (UR)</option>
            <option value="UE">Empaque (UE)</option>
          </select>
        </div>
        <div class="modal-buttons">
          <button type="submit" class="btn btn-primary">üíæ Guardar</button>
          <button type="button" class="btn btn-secondary" onclick="cerrarModal()">‚úï Cancelar</button>
        </div>
      </form>
    </div>
  </div>

  <script>
  const token = localStorage.getItem('token');
  if (!token) {
    Swal.fire("No est√°s autenticado", "Por favor inicia sesi√≥n", "warning").then(() => {
      window.location.href = "/";
    });
  }

  const headers = {
    'Content-Type': 'application/json',
    'Authorization': 'Bearer ' + token
  };

  let usuarios = [];

  async function cargarUsuarios() {
    const res = await fetch('/admin/usuarios', { headers });
    if (res.ok) {
      usuarios = await res.json();
      renderizarTabla();
    } else {
      mostrarMensaje("Error al cargar usuarios", "error");
    }
  }

  function mostrarMensaje(texto, tipo) {
    Swal.fire({
      icon: tipo === 'error' ? 'error' : tipo === 'success' ? 'success' : 'info',
      title: texto,
      showConfirmButton: false,
      timer: 2000
    });
  }

  function obtenerTextoRol(codigoRol) {
    const roles = {
      'UAI': 'Administrador (UAI)', 'UReg': 'Registro (UReg)', 'UTI': 'Test Inicial (UTI)',
      'UC': 'Calidad (UC)', 'ULL': 'Liberaci√≥n y Limpieza (ULL)', 'UR': 'Re-Test (UR)', 'UE': 'Empaque (UE)'
    };
    return roles[codigoRol] || codigoRol;
  }

  function renderizarTabla() {
    const tbody = document.getElementById('usuariosTableBody');
    tbody.innerHTML = '';
    usuarios.forEach(usuario => {
      const tr = document.createElement('tr');
      tr.dataset.id = usuario.id;
      tr.className = usuario.activo ? '' : 'usuario-deshabilitado';
      tr.innerHTML = `
        <td>${usuario.id}</td>
        <td>${usuario.nombre}</td>
        <td>${usuario.email}</td>
        <td><span class="rol-tag">${obtenerTextoRol(usuario.rol)}</span></td>
        <td>
          <button class="acciones-btn" onclick="abrirModal(${usuario.id})">‚úèÔ∏è Editar</button>
          <button class="acciones-btn" onclick="eliminarUsuario(${usuario.id})">üóëÔ∏è Eliminar</button>
          <button class="acciones-btn" onclick="toggleUsuario(${usuario.id})">
            ${usuario.activo ? 'üö´ Deshabilitar' : '‚úÖ Habilitar'}
          </button>
        </td>
      `;
      tbody.appendChild(tr);
    });
  }

  async function crearUsuario() {
    const nombre = document.getElementById('nombre').value.trim();
    const userName = document.getElementById('userName').value.trim();
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value;
    const rol = document.getElementById('rol').value;

    if (!nombre || !userName || !email || !password || !rol) {
      mostrarMensaje('Por favor, complete todos los campos', 'error');
      return;
    }

    const res = await fetch('/admin/usuarios/nuevo', {
      method: 'POST',
      headers,
      body: JSON.stringify({ nombre, userName, email, password, rol })
    });

    const data = await res.json();
    if (res.ok) {
      mostrarMensaje("Usuario creado", "success");
      document.getElementById('formCrearUsuario').reset();
      cargarUsuarios();
    } else {
      mostrarMensaje(data.error || "Error creando usuario", "error");
    }
  }

  async function eliminarUsuario(id) {
    const usuario = usuarios.find(u => u.id === id);
    if (!usuario) return;

    const confirm = await Swal.fire({
      title: `¬øEliminar a "${usuario.nombre}"?`,
      text: "Esta acci√≥n no se puede deshacer",
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: "S√≠, eliminar",
      cancelButtonText: "Cancelar"
    });

    if (confirm.isConfirmed) {
      const res = await fetch(`/admin/usuarios/${id}`, {
        method: 'DELETE',
        headers
      });
      const data = await res.json();
      if (res.ok) {
        mostrarMensaje("Usuario eliminado", "success");
        cargarUsuarios();
      } else {
        mostrarMensaje(data.error || "Error eliminando usuario", "error");
      }
    }
  }

  async function toggleUsuario(id) {
    const usuario = usuarios.find(u => u.id === id);
    if (!usuario) return;

    const accion = usuario.activo ? "deshabilitar" : "habilitar";

    const confirm = await Swal.fire({
      title: `¬øQuieres ${accion} a "${usuario.nombre}"?`,
      icon: "question",
      showCancelButton: true,
      confirmButtonText: `S√≠, ${accion}`,
      cancelButtonText: "Cancelar"
    });

    if (confirm.isConfirmed) {
      const res = await fetch(`/admin/usuarios/${id}/toggle`, {
        method: 'PATCH',
        headers
      });
      const data = await res.json();
      if (res.ok) {
        mostrarMensaje(`Usuario ${accion}do`, "info");
        cargarUsuarios();
      } else {
        mostrarMensaje(data.error || `Error al ${accion} usuario`, "error");
      }
    }
  }

  function abrirModal(userId) {
    const usuario = usuarios.find(u => u.id === userId);
    if (usuario) {
      document.getElementById('editarId').value = usuario.id;
      document.getElementById('editarNombre').value = usuario.nombre;
      document.getElementById('editarEmail').value = usuario.email;
      document.getElementById('editarRol').value = usuario.rol;
      document.getElementById('modalEditar').style.display = 'flex';
    }
  }

  function cerrarModal() {
    document.getElementById('modalEditar').style.display = 'none';
  }

  async function guardarEdicion() {
    const id = document.getElementById('editarId').value;
    const nombre = document.getElementById('editarNombre').value.trim();
    const email = document.getElementById('editarEmail').value.trim();
    const rol = document.getElementById('editarRol').value;

    const res = await fetch(`/admin/usuarios/${id}`, {
      method: 'PUT',
      headers,
      body: JSON.stringify({ nombre, email, rol })
    });

    const data = await res.json();
    if (res.ok) {
      mostrarMensaje("Usuario actualizado", "success");
      cerrarModal();
      cargarUsuarios();
    } else {
      mostrarMensaje(data.error || "Error actualizando usuario", "error");
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    cargarUsuarios();
    document.getElementById('formCrearUsuario').addEventListener('submit', e => {
      e.preventDefault();
      crearUsuario();
    });
    document.getElementById('formEditarUsuario').addEventListener('submit', e => {
      e.preventDefault();
      guardarEdicion();
    });
    document.getElementById('modalEditar').addEventListener('click', e => {
      if (e.target === document.getElementById('modalEditar')) cerrarModal();
    });
  });
</script>

</body>
</html>