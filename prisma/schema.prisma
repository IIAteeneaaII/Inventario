generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rol {
  UAI // Administrador de Inventario
  UA // User Almac√©n
  UV // User Visualizador
  UReg // User Registro
  UTI // User Test Inicial
  UR // User Retest
  UC // User Cosmetica
  UE // User Empaque
  ULL // User Liberacion y limpieza
}

enum EstadoRegistro {
  SN
  SCRAP_COSMETICO
  SCRAP_ELECTRONICO
  SCRAP_INFESTACION
  REPARACION
}

model User {
  id        Int        @id @default(autoincrement())
  nombre    String
  userName       String
  email     String     @unique
  password  String
  rol       Rol
  registros Registro[]
  lotes     Lote[]     @relation("UserLotes")
  logs      Log[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Lote {
  id        Int        @id @default(autoincrement())
  numero    String     @unique
  sku       String
  UserId Int
  User   User    @relation("UserLotes", fields: [UserId], references: [id])
  registros Registro[]
  createdAt DateTime   @default(now())
}

model Registro {
  id        Int            @id @default(autoincrement())
  sn        String
  estado    EstadoRegistro
  UserId Int
  loteId    Int
  User   User        @relation(fields: [UserId], references: [id])
  lote      Lote           @relation(fields: [loteId], references: [id])
  createdAt DateTime       @default(now())

  @@unique([sn, loteId])
  @@index([UserId])
  @@index([loteId])
}

model Log {
  id        Int      @id @default(autoincrement())
  UserId Int
  User   User  @relation(fields: [UserId], references: [id])
  accion    String
  entidad   String
  detalle   String?
  timestamp DateTime @default(now())
}


